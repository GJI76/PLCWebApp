Marionette.Behaviors=function(t,e){function n(t,o){o=n.parseBehaviors(t,o||e.result(t,"behaviors")),n.wrap(t,o,e.keys(i))}var i={setElement:function(t,n){t.apply(this,e.tail(arguments,2)),e.each(n,function(t){t.$el=this.$el},this)},destroy:function(t,n){var i=e.tail(arguments,2);t.apply(this,i),e.invoke(n,"destroy",i)},bindUIElements:function(t,n){t.apply(this),e.invoke(n,t)},unbindUIElements:function(t,n){t.apply(this),e.invoke(n,t)},triggerMethod:function(t,n){var i=e.tail(arguments,2);t.apply(this,i),e.each(n,function(e){t.apply(e,i)})},delegateEvents:function(n,i){var o=e.tail(arguments,2);n.apply(this,o),e.each(i,function(e){t.bindEntityEvents(e,this.model,t.getOption(e,"modelEvents")),t.bindEntityEvents(e,this.collection,t.getOption(e,"collectionEvents"))},this)},undelegateEvents:function(n,i){var o=e.tail(arguments,2);n.apply(this,o),e.each(i,function(e){t.unbindEntityEvents(e,this.model,t.getOption(e,"modelEvents")),t.unbindEntityEvents(e,this.collection,t.getOption(e,"collectionEvents"))},this)},behaviorEvents:function(n,i){var o={},a=e.result(this,"ui");return e.each(i,function(n,i){var s={},r=e.clone(e.result(n,"events"))||{},u=e.result(n,"ui"),l=e.extend({},a,u);r=t.normalizeUIKeys(r,l),e.each(e.keys(r),function(t){var o=new Array(i+2).join(" "),a=t+o,u=e.isFunction(r[t])?r[t]:n[r[t]];s[a]=e.bind(u,n)}),o=e.extend(o,s)}),o}};return e.extend(n,{behaviorsLookup:function(){throw new Error("You must define where your behaviors are stored.See https://github.com/marionettejs/backbone.marionette/blob/master/docs/marionette.behaviors.md#behaviorslookup")},getBehaviorClass:function(t,i){return t.behaviorClass?t.behaviorClass:e.isFunction(n.behaviorsLookup)?n.behaviorsLookup.apply(this,arguments)[i]:n.behaviorsLookup[i]},parseBehaviors:function(t,i){return e.chain(i).map(function(i,o){var a=n.getBehaviorClass(i,o),s=new a(i,t),r=n.parseBehaviors(t,e.result(s,"behaviors"));return[s].concat(r)}).flatten().value()},wrap:function(t,n,o){e.each(o,function(o){t[o]=e.partial(i[o],t[o],n)})}}),n}(Marionette,_);