// CodeMirror, copyright (c) by Marijn Haverbeke and others
// Distributed under an MIT license: http://codemirror.net/LICENSE

!function(t){"object"==typeof exports&&"object"==typeof module?t(require("../../lib/codemirror")):"function"==typeof define&&define.amd?define(["../../lib/codemirror"],t):t(CodeMirror)}(function(t){function e(t){"object"==typeof t&&(this.minChars=t.minChars,this.style=t.style,this.showToken=t.showToken,this.delay=t.delay,this.wordsOnly=t.wordsOnly),null==this.style&&(this.style=a),null==this.minChars&&(this.minChars=h),null==this.delay&&(this.delay=s),null==this.wordsOnly&&(this.wordsOnly=c),this.overlay=this.timeout=null}function i(t){var e=t.state.matchHighlighter;clearTimeout(e.timeout),e.timeout=setTimeout(function(){n(t)},e.delay)}function n(t){t.operation(function(){var e=t.state.matchHighlighter;if(e.overlay&&(t.removeOverlay(e.overlay),e.overlay=null),!t.somethingSelected()&&e.showToken){for(var i=e.showToken===!0?/[\w$]/:e.showToken,n=t.getCursor(),o=t.getLine(n.line),h=n.ch,a=h;h&&i.test(o.charAt(h-1));)--h;for(;a<o.length&&i.test(o.charAt(a));)++a;return void(a>h&&t.addOverlay(e.overlay=l(o.slice(h,a),i,e.style)))}var s=t.getCursor("from"),c=t.getCursor("to");if(s.line==c.line&&(!e.wordsOnly||r(t,s,c))){var u=t.getRange(s,c).replace(/^\s+|\s+$/g,"");u.length>=e.minChars&&t.addOverlay(e.overlay=l(u,!1,e.style))}})}function r(t,e,i){var n=t.getRange(e,i);if(null!==n.match(/^\w+$/)){if(e.ch>0){var r={line:e.line,ch:e.ch-1},o=t.getRange(r,e);if(null===o.match(/\W/))return!1}if(i.ch<t.getLine(e.line).length){var r={line:i.line,ch:i.ch+1},o=t.getRange(i,r);if(null===o.match(/\W/))return!1}return!0}return!1}function o(t,e){return!(t.start&&e.test(t.string.charAt(t.start-1))||t.pos!=t.string.length&&e.test(t.string.charAt(t.pos)))}function l(t,e,i){return{token:function(n){return!n.match(t)||e&&!o(n,e)?(n.next(),void(n.skipTo(t.charAt(0))||n.skipToEnd())):i}}}var h=2,a="matchhighlight",s=100,c=!1;t.defineOption("highlightSelectionMatches",!1,function(r,o,l){if(l&&l!=t.Init){var h=r.state.matchHighlighter.overlay;h&&r.removeOverlay(h),clearTimeout(r.state.matchHighlighter.timeout),r.state.matchHighlighter=null,r.off("cursorActivity",i)}o&&(r.state.matchHighlighter=new e(o),n(r),r.on("cursorActivity",i))})});