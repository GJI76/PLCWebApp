define(["backbone","rivets","views/item/WidgetMulti","text!./template.js","utils/SignalChainFunctions","utils/SignalChainClasses","jqueryknob"],function(e,t,i,s){return i.extend({ins:[{title:"in",to:"in"}],outs:[{title:"out",from:"in",to:"out"}],widgetEvents:{"change .sendToCloud":"sendToCloud","change .cloudService":"changeCloudService"},typeID:"CloudOut",categories:["network"],className:"cloudOut",template:_.template(s),initialize:function(e){i.prototype.initialize.call(this,e),this.model.set({title:"CloudOut",sendPeriod:1e4,cloudService:"sparkfun",phantPrivateKey:"",phantPublicKey:"",phantDataField:"mydata",phantUrl:"https://data.sparkfun.com",particlePin:"D0",particleDeviceId:"",particleAccessToken:"",averageInputs:!1,roundOutput:!0,sendToCloud:!1,displayTimerStart:!1,displayText:"Stopped",lastValueSentToCloud:"-1000",lastTimeSentToCloud:0,repeatSameCount:0,resendRepeatSameInterval:5}),this.startTime=0,this.lastSendToCloud=!1,this.lastTimeDiff=0,this.inputLast=0,this.inputCumulative=0,this.inputCount=0,this.redPulseCount=0,this.signalChainFunctions.push(this.watchData),this.localTimeKeeperFunc=function(e){this.timeKeeper(e)}.bind(this),window.app.timingController.registerFrameCallback(this.localTimeKeeperFunc,this)},onRender:function(){i.prototype.onRender.call(this);var e=this;this.$(".dial").knob({fgColor:"#000000",bgColor:"#ffffff",inputColor:"#000000",angleOffset:-125,angleArc:250,width:80,height:62,font:"'Helvetica Neue', sans-serif",displayInput:!1,min:0,max:1023,change:function(t){e.model.set("in",parseInt(t))}}),t.binders.knob=function(e,t){e.value=t,$(e).val(t),$(e).trigger("change")},this.init=!1},onRemove:function(){window.app.timingController.removeFrameCallback(this.localTimeKeeperFunc,this)},changeCloudService:function(){if(!app.server){var e=this.model.get("cloudService");switch(e){case"sparkfun":this.$(".sparkfun").show(),this.$(".particle").hide();break;case"particle":this.$(".sparkfun").hide(),this.$(".particle").show()}}},watchData:function(e){var t=e;return this.model.get("averageInputs")&&(this.inputCount++,this.inputCumulative+=Number(e),t=this.inputCumulative/this.inputCount),this.model.get("roundOutput")&&(t=Math.round(t)),t},sendToCloud:function(){app.server||this.model.get("sendToCloud")||this.setDisplayText("Stopped")},setDisplayText:function(e){app.server||this.$(".timeLeft").text(e)},timeKeeper:function(){if(0==this.init&&(this.changeCloudService(),this.init=!0),this.model.get("sendToCloud")){var e=this,t=this.model.get("sendPeriod");0==this.lastSendToCloud&&(this.startTime=Date.now()-(t+1),this.lastSendToCloud=!0);var i=Date.now()-this.startTime,s=Date.now()-this.model.get("lastTimeSentToCloud"),a=this.model.get("out").toString();if(i>=t||this.model.get("lastValueSentToCloud")!=a&&s>=t){if(this.startTime=Date.now(),app.server||this.$(".outvalue").css("color","#ff0000"),this.setDisplayText(" Send in: "+(t/1e3).toFixed(1)+"s"),this.lastTimeDiff=0,this.model.get("lastValueSentToCloud")!=a||this.model.get("repeatSameCount")>=this.model.get("resendRepeatSameInterval")-1){if(console.log("actually sending: "+a),app.server&&app.serverMode||!app.server&&!app.serverMode)switch(this.model.set("lastTimeSentToCloud",Date.now()),this.model.set("repeatSameCount",0),this.model.get("cloudService")){case"sparkfun":var o=this.model.get("phantPrivateKey"),n=this.model.get("phantPublicKey"),l=this.model.get("phantDataField"),r=this.model.get("phantUrl"),d=r+"/input/"+n+"?private_key="+o+"&"+l+"="+a;$.getJSON(d).done(function(e){console.log("JSON Data: "+JSON.stringify(e))}).fail(function(t,i,s){var a=JSON.parse(t.responseText),o=i+", "+s+", "+a.message;console.log("Connection to cloud service failed: "+o),e.model.set("sendToCloud",!1),e.setDisplayText(a.message.indexOf("is not a valid field")>=0?"Invalid datafield":"Unauthorized"==s?"Invalid key":"Can't connect")});break;case"particle":var d="https://api.particle.io/v1/devices/"+this.model.get("particleDeviceId")+"/analogwrite";$.ajax({url:d,type:"POST",timeout:2e3,data:{access_token:this.model.get("particleAccessToken"),params:this.model.get("particlePin")+","+a}}).done(function(){})}}else(app.server&&app.serverMode||!app.server&&!app.serverMode)&&(console.log("not sending due to repeat: "+this.model.get("repeatSameCount")),this.model.set("repeatSameCount",this.model.get("repeatSameCount")+1));this.model.set("lastValueSentToCloud",a),this.inputCount=0,this.inputCumulative=0}else i-this.lastTimeDiff>=100&&(this.setDisplayText(" Send in: "+((t-i)/1e3).toFixed(1)+"s"),!app.server&&i>=300&&this.$(".outvalue").css("color","#000000"),this.lastTimeDiff=i)}else this.lastSendToCloud=!1}})});