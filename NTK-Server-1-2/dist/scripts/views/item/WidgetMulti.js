define(["backbone","rivets","models/WidgetConfig","text!tmpl/item/Widget_tmpl.js","jqueryui","jquerytouchpunch"],function(e,t,i,s){return e.Marionette.ItemView.extend({events:{"click .inlet .unMap":"unMapInlet","click .remove":"removeWidget","blur .settings input":"onChangeSettings"},widgetEvents:{},className:"widget",categories:[],template:function(){return _.template(s,{server:app.server})},initialize:function(e){e.model=void 0,_.extend(this.events,this.widgetEvents),e=e?e:{},_.extend(e,{ins:this.ins}),_.extend(e,{outs:this.outs}),_.extend(e,{typeID:this.typeID}),this.signalChainFunctions=[],this.sources=[],this.cables=[],this.model.set(e),this.model.set("server",app.server),this.model.on("change",this.processSignalChain,this),this.model.on("change",this.onModelChange,this),this.model.on("change",this.checkOutputMappingUpdate,this),window.app.on("Widget:removeMapping",this.removeMapping,this),this.setWidgetBinders(),this.setTopZIndex()},onRender:function(){var e=this;this.el.className.match(/ widget/)||(this.el.className+=" widget"),t.bind(this.$el,{widget:this.model,sources:this.sources}),this.sourceModel&&this.listenTo(this.sourceModel,"change",this.syncWithSourceModel),this.makeDraggable(),this.$(".widgetBottom .content").hide(),this.$(".widgetBottom .tab").click(function(){e.$(".widgetBottom .content").toggle()})},onModelChange:function(){},checkOutputMappingUpdate:function(e){var t=e.changedAttributes().outputMapping,i="in"==this.deviceMode;if(t)for(var s=this.sources.length-1;s>=0;s--){var o=this.sources[s].model.get("type");void 0!==o&&window.app.vent.trigger("Widget:hardwareSwitch",{deviceType:o,port:t,mode:this.deviceMode,hasInput:i})}var n=e.changedAttributes().inputMapping;if(n)for(var s=this.sources.length-1;s>=0;s--)window.app.vent.trigger("Widget:hardwareSwitch",{deviceType:this.sources[s].model.get("type"),port:n,mode:this.deviceMode})},makeDraggable:function(){var e=function(e,t){if(this.model.set(void 0!==t?{offsetLeft:t.position.left,offsetTop:t.position.top,height:this.$el.height(),width:148}:{offsetLeft:this.$el.position().left,offsetTop:this.$el.position().top,height:this.$el.height(),width:148}),this.cables.length)for(var i=this.cables.length-1;i>=0;i--)this.cables[i].cable.updateCoordinates(this.cables[i].offsets?{to:{x:this.model.get("offsetLeft")+this.cables[i].offsets.destination.x,y:this.model.get("offsetTop")+this.cables[i].offsets.destination.y}}:{to:{x:this.model.get("offsetLeft"),y:this.model.get("offsetTop")}})};this.$el.draggable({handle:".dragHandle",drag:e.bind(this),stack:".widget"}),this.$el.css({position:"absolute"}),this.$(".outlet").draggable({revert:!0,stop:function(t){e.bind(this)(t)}.bind(this)}).data("model",this.model),this.$(".inlet").draggable({revert:!0,revertDuration:0,stop:function(e,t){this.unMapInlet(e,t,this)}.bind(this)}),this.$(".inlet").droppable({hoverClass:"hover",drop:function(e,t){var i=$(t.draggable).data("model");this.onDrop(e,t,i)}.bind(this)})},setWidgetBinders:function(){var e=this;t.binders.positionx=function(e,t){e.style.left=parseInt(t,10)+"px"},t.binders.positiony=function(e,t){e.style.top=parseInt(t,10)+"px"},t.binders["style-*"]=function(e,t){e.style.setProperty(this.args[0],t/100)},t.binders["style-activecontrol"]=function(e,t){var i=this.model.get("activeControlParameter"),s=t;switch(i){case"top":case"left":case"bottom":case"right":s+="px";break;case"opacity":s/=100}e.style[i]=s},t.binders.selected={bind:function(t){var i=function(t){e.model.set(this.keypath.split(":")[1],$(t.currentTarget).find("option:selected").val())};$(t).on("change",_.bind(i,this))},unbind:function(e){$(e).off("change",this.callback)},routine:function(t,i){e.$("select").val(i)}},t.formatters.rounded=function(e){return isNaN(e)?"--":Number(e).toFixed(0)},t.formatters.twodecimals=function(e){var t=Number(e);return isNaN(e)?"--":t.toFixed(t>=100?0:t>=10&&100>t?1:2)}},setTopZIndex:function(){var e=0;$(".widget").each(function(){var t=parseInt($(this).css("z-index"),10);t>e&&(e=t)}),this.$el.css("z-index",e)},onDrop:function(e,t,i){this.unMapInlet(e,t);var s=t.draggable[0].dataset.field,o=e.target.dataset.field;this.model.get("offsetLeft")||this.model.get("offsetTop")||this.model.set({offsetLeft:this.$el.position().left,offsetTop:this.$el.position().top,height:this.$el.height(),width:148}),i.get("offsetLeft")||i.get("offsetTop")||i.set({offsetLeft:$(t.draggable[0].parentNode.parentNode).position().left,offsetTop:$(t.draggable[0].parentNode.parentNode).position().top,height:this.$el.height(),width:148}),app.Patcher.Controller.mapToModel({view:this,model:i,IOMapping:{sourceField:s,destinationField:o},inletOffsets:{source:{x:i.get("width")-8,y:t.draggable.css({top:0,left:0}).position().top+12},destination:{x:5,y:$(e.target).position().top+12}}}),$(e.target).addClass("connected")},unMapInlet:function(e){var t=e.target.dataset.field;if(this.sourceToRemove=_.find(this.sources,function(e){return e.map.destinationField===t}),this.sources=_.reject(this.sources,function(e){return e.map.destinationField===t}),this.sourceToRemove){var i=_.find(this.cables,function(e){return e.map.destinationField===t});window.app.vent.trigger("Widget:removeMapping",this.sourceToRemove,this.model.get("wid")),void 0!==i&&i.cable.remove(),this.cables=_.reject(this.cables,function(e){return e.map.destinationField===t})}},removeMapping:function(e){"ArduinoUno"!==e&&(this.sources=_.reject(this.sources,function(t){return t.model.attributes.wid==e}))},addCable:function(e,t,i,s,o){this.cables.push({map:s,model:t,cable:e,offsets:i,sourceViewID:o})},removeWidget:function(e,t){app.Patcher.Controller.removeWidget(this,t);for(var i=[],s=this.cables.length-1;s>=0;s--)this.cables[s].cable.remove(),i.push(s);for(var s=i.length-1;s>=0;s--){var o=i.indexOf(_.findWhere(this.cables,function(e){return e.id=i[s]}));this.cables.splice(o,1),window.app.cableManager.removeConnection(i[s])}this.remove(),this.onRemove&&this.onRemove()},removeCable:function(e){this.cables=_.without(this.cables,_.find(this.cables,function(t){return t.cable==e})),e.remove(),window.app.cableManager.removeConnection(e.id)},destinationModels:[],onSync:function(){},onChangeSettings:function(){var e=this.$(".settings input").val();if(void 0!==e&&0!==e.length){var t=_.reject(window.app.Patcher.Controller.widgetMappings,function(e){return e.viewWID==this.model.get("wid")},this),i=_.filter(t,function(t){return t.map.destinationField===e});if(i.length>0)return this.sources[0].map.destinationField="",this.model.set("outputMapping",""),alert("This port cannot be used as it is already in use by another widget."),!1}this.$(".settings input").parents(".rightTab")?this.model.set("outputMapping",e):this.model.set("inputMapping",e);var s;s=JSON.parse(JSON.stringify(this.sources));for(var o=s.length-1;o>=0;o--)s[o].model=void 0;window.app.vent.trigger("Widget:updateSourceMappings",this.model.get("wid"),s)},addInputMap:function(e){for(var t=!1,i=this.sources.length-1;i>=0;i--)this.sources[i].map.destinationField===e.map.destinationField&&this.sources[i].map.sourceField===e.map.sourceField&&this.sources[i].model.get("wid")===e.model.get("wid")&&(t=!0);if(!t){for(var s=!1,i=this.sources.length-1;i>=0;i--)this.sources[i].map.destinationField===e.map.destinationField&&(this.sources[i].map.sourceField=e.map.sourceField,s=!0);this.sources.push(e),this.listenTo(e.model,"change",this.syncWithSource)}},syncWithSource:function(e){for(var t=this.model,i=_.map(_.where(this.sources,{model:e}),function(e){return e.map}),s=i.length-1;s>=0;s--){var o=i[s];if(t.get("active")&&void 0!==t.attributes[o.destinationField]){var n={},a=e.get(o.sourceField);n[o.destinationField]=void 0==a?0:a,t.set(n,{updateNoTrigger:!0})}else if(t.get("active")&&t.get("activeOut")&&e.attributes[t.get("outputMapping")]!==t.get(o.sourceField)){var n={};n[t.get("outputMapping")]=t.get(o.sourceField);var r=!0;"in"==this.deviceMode&&(r=!1),e.set(n,{fromServer:!1,trigger:r})}}if((e.changedAttributes().offsetLeft||e.changedAttributes().offsetTop)&&this.cables.length)for(var s=this.cables.length-1;s>=0;s--){var d=this.cables[s];d.model===e&&d.cable.updateCoordinates({from:{x:e.get("offsetLeft")+d.offsets.source.x,y:e.get("offsetTop")+d.offsets.source.y}})}},processSignalChain:function(){var e=this.model.get("outs"),t={};if(e){for(var i=e.length-1;i>=0;i--){var s=e[i];t[s.to]=this.model.get(s.from);var o=t[s.to];_.each(this.signalChainFunctions,function(e){e=_.bind(e,this),o=e(o,this.model.attributes)},this),t[s.to]=o}for(var n in t){var o=t[n];this.model.set(n,t[n])}}},setFromModel:function(e){return this.$el.css({top:e.offsetTop,left:e.offsetLeft}),this.model.set(e),this},setAsHardwareOutput:function(){this.onModelChange=function(){for(var e=this.sources.length-1;e>=0;e--)this.syncWithSource(this.sources[e].model)}}})});