define(["backbone","rivets","views/item/WidgetMulti","text!./template.js","utils/SignalChainFunctions","utils/SignalChainClasses"],function(t,e,i,n){return i.extend({ins:[{title:"in1",to:"in1"},{title:"in2",to:"in2"},{title:"in3",to:"in3"},{title:"in4",to:"in4"}],outs:[{title:"out1",from:"output",to:"out1"}],sources:[],typeID:"Mix",className:"mix",categories:["logic"],template:_.template(n),initialize:function(t){i.prototype.initialize.call(this,t),this.model.set({title:"Mix",in1:"-",in2:"-",in3:"-",in4:"-",output:0,mixType:"latest"})},onRender:function(){i.prototype.onRender.call(this)},onModelChange:function(t){if(void 0!==t.changedAttributes().in1||void 0!==t.changedAttributes().in2||void 0!==t.changedAttributes().in3||void 0!==t.changedAttributes().in4){for(var e=[parseFloat(this.model.get("in1")),parseFloat(this.model.get("in2")),parseFloat(this.model.get("in3")),parseFloat(this.model.get("in4"))],i=e.length-1;i>=0;i--)isNaN(e[i])&&e.splice(i,1);var n=0;switch(this.model.get("mixType")){case"latest":void 0!==t.changedAttributes().in1&&(n=this.model.get("in1")),void 0!==t.changedAttributes().in2&&(n=this.model.get("in2")),void 0!==t.changedAttributes().in3&&(n=this.model.get("in3")),void 0!==t.changedAttributes().in4&&(n=this.model.get("in4"));break;case"avg":for(var i=0;i<e.length;i++)n+=e[i];n/=e.length;break;case"sum":for(var i=0;i<e.length;i++)n+=e[i];break;case"mult":for(var i=0;i<e.length;i++)0===i?n=e[i]:n*=e[i];break;case"min":for(var i=0;i<e.length;i++)0===i?n=e[i]:e[i]<n&&(n=e[i]);break;case"max":for(var i=0;i<e.length;i++)0===i?n=e[i]:e[i]>n&&(n=e[i])}("latest"==this.model.get("mixType")||e.length>0)&&this.model.set("output",n)}}})});