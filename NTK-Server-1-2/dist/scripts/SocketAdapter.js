define([],function(){var e=function(){this.bindToSocketServer(),window.app.serverMode=!0};return e.prototype={bindToSocketServer:function(){var e=window.location.host;console.log("SERVER ADDRESS",e);var n=this.socket=window.io.connect(e);this.registerInboundServerEvents(n),this.registerOutboundClientEvents(n)},registerInboundServerEvents:function(e){e.on("loadPatchFromServer",function(e){window.app.vent.trigger("ToolBar:loadPatch",e)}),e.on("serverActive",function(e){window.app.serverMode=e,window.app.vent.trigger("serverActive",e)}),e.on("connect",function(){self.connected=!0,window.app.vent.trigger("socket:connected")}),e.on("error",function(e){console.log("ERROR: ",e)}),e.on("server:clientModelUpdate",function(e){window.app.vent.trigger("updateWidgetModelFromServer",e)}),e.on("server:clientMappingUpdate",function(e){window.app.vent.trigger("updateWidgetMappingFromServer",JSON.parse(e))}),e.on("receivedModelUpdate",function(e){window.app&&window.app.vent&&window.app.vent.trigger("receivedDeviceModelUpdate",e)}),e.on("disconnect",function(){self.connected=!1})},registerOutboundClientEvents:function(e){var n=void 0;window.app.vent.on("widgetUpdate",function(n){(window.app.server||!window.app.serverMode)&&e.emit("client:sendModelUpdate",n)}),window.app.vent.on("sendDeviceModelUpdate",function(o){(window.app.server||!window.app.serverMode)&&(void 0!==n&&clearTimeout(n),n=setTimeout(function(){e.emit("sendModelUpdate",o),n=void 0}.bind(this),10))}),window.app.vent.on("updateModelMappings",function(n){(window.app.server||!window.app.serverMode)&&e.emit("client:updateModelMappings",JSON.stringify(n))}),window.app.vent.on("Widget:updateSourceMappings",function(n,o){if(window.app.server||!window.app.serverMode){var i={wid:n,mappings:o};e.emit("client:sendSourceMappingUpdate",JSON.stringify(i))}}),window.app.vent.on("addWidget",function(n){(window.app.server||!window.app.serverMode)&&e.emit("client:addWidget",JSON.stringify(n))}),window.app.vent.on("removeWidget",function(n){(window.app.server||!window.app.serverMode)&&e.emit("client:removeWidget",n)}),window.app.vent.on("clearPatch",function(n){(window.app.server||!window.app.serverMode)&&e.emit("client:clearPatch",JSON.stringify(n))}),window.app.vent.on("Widget:hardwareSwitch",function(n){(window.app.server||!window.app.serverMode)&&e.emit("client:changeIOMode",JSON.stringify(n))}),window.app.vent.on("loadPatchFileToServer",function(n){(window.app.server||!window.app.serverMode)&&e.emit("loadPatchFile",{patch:JSON.stringify(n)})}),window.app.vent.on("savePatchToServer",function(n){var o=n.collection,i=n.mappings,t={widgets:o.toJSON(),mappings:i};t={patch:t},e.emit("saveCurrentPatch",JSON.stringify(t))}),window.app.vent.on("ToolBar:toggleServer",function(){e.emit("client:toggleServer"),window.app.serverMode=!window.app.serverMode})}},e});